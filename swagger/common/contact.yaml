paths:
  /contact:
    # [GET] GET CONTACTS
    get:
      tags:
        - Contact
      summary: Fetch contacts
      description: Fetch contacts
      parameters:
        - name: page
          in: query
          description: Pagination page
          example : 1
          schema:
            type: integer
        - name: limit
          in: query
          description: number of elements per page
          example: 20
          schema:
            type: integer
      security:
        - bearerAuth: [Authorization]
      responses:
        '200':
          description: "OK"
        '500':
          description: "Server Error"
      # [POST] CREATE CONTACT
    post:
      tags:
        - Contact
      summary: Create new contact
      requestBody:
        description: contact Data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
            examples:
              createContact:
                $ref: '#/components/examples/createContact'
      security:
        - bearerAuth: [Authorization]
      responses:
        '201':
          description: 'Created'
        '400':
          description: 'Bad Request'
        '409':
          description: 'Conflict'
        '500':
          description: 'Server Error'

  /contactId:
    # [GET] GET ONE CONTACT
    get:
      tags:
        - Contact
      summary: Fetch one contact ✔️
      description: Fetch contact
      parameters:
        - name: id
          in: path
          description: contacts Id
          required: true
          example: id_Contact
          schema:
            type: string
      security:
        - bearerAuth: [Authorization]
      responses:
        200:
          description: "OK"
        500:
          description: "Server Error"
        400:
          description: "Bad Request"
        409:
          description: "Conflict"

      # [PUT] UPDATE CONTACT

    put:
      tags:
        - Contact
      summary: Update contact
      parameters:
        - name: id
          in: path
          description: contact Id
          required: true
          example: id_contact
          schema:
            type: string
      requestBody:
        description: contact Data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
            examples:
              createContact:
                $ref: '#/components/examples/createContact'
      security:
        - bearerAuth: [Authorization]
      responses:
        '200':
          description: 'OK'
        '400':
          description: 'Bad Request'
        '409':
          description: 'Conflict'
        '500':
          description: 'Server Error'

    delete:
      tags:
        - Contact
      summary: Delete contact

      parameters:
        - name: id
          in: path
          description: contact Id
          required: true
          schema:
            type: string

      security:
        - bearerAuth: [Authorization]

      responses:
        '200':
          description: 'OK'
        '409':
          description: 'Conflict'
        '500':
          description: 'Server Error'

  /contactSearch:
    # [GET] SEARCH FOR CONTACT
    get:
      tags:
        - Contact
      summary: search for contact ✔️
      description: search for contact

      parameters:
        - name: q
          in: query
          description: search query
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Pagination page
          example: 1
          schema:
            type: string
        - name: limit
          in: query
          description: number of elements per page
          example: 20
          schema:
            type: string

      security:
        - bearerAuth: [Authorization]

      responses:
        '200':
          description: "OK"
        '500':
          description: "Server Error"