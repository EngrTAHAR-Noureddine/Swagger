paths:
  /contact:
    # [GET] GET CONTACTS
    get:
      tags:
        - Contact
      summary: Fetch contacts
      description: Fetch contacts
      parameters:
        - name: page
          in: query
          description: Pagination page
          example : 1
          schema:
            type: integer
        - name: limit
          in: query
          description: number of elements per page
          example: 10
          schema:
            type: integer
      security:
        - bearerAuth: [Authorization]
      responses:
        '200':
          description: "Get All Contacts"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "../components/schemas/contact.yaml#/components/schemas/contact"
                  pagination:
                    $ref: "../components/schemas/pagination.yaml#/components/schemas/pagination"
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                data:
                  - $ref: "../components/examples/contact.yaml#/components/examples/contact"
                  - $ref: "../components/examples/contact.yaml#/components/examples/contact"
                pagination:
                  $ref: "../components/examples/pagination.yaml#/components/examples/pagination"
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/goodResponseFindAllContacts"
        '401':
          description: 'Error: Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/ErrorUnauthorized401"
        '500':
          description: "Server Error"
      # [POST] CREATE CONTACT
    post:
      tags:
        - Contact
      summary: Create new contact
      requestBody:
        description: contact Data
        required: true
        content:
          application/json:
            schema:
              $ref: '../components/schemas/contact.yaml#/components/schemas/contact'
            examples:
              createContact:
                $ref: '../components/examples/contact.yaml#/components/examples/createContact'
      security:
        - bearerAuth: [Authorization]
      responses:
        '200':
          description: "Response of the create contact"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "../components/schemas/contact.yaml#/components/schemas/contact"
                  pagination:
                    $ref: "../components/schemas/pagination.yaml#/components/schemas/pagination"
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                data:
                  $ref: "../components/examples/contact.yaml#/components/examples/contact"
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/goodResponseCreated"
        '400':
          description: 'Error: Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/BadJSONe400"
        '401':
          description: 'Error: Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/ErrorUnauthorized401"
        '500':
          description: "Server Error"

  /contactId:
    # [GET] GET ONE CONTACT
    get:
      tags:
        - Contact
      summary: Fetch one contact ✔️
      description: Fetch contact
      parameters:
        - name: id
          in: path
          description: contacts Id
          required: true
          example: id_Contact
          schema:
            type: string
      security:
        - bearerAuth: [Authorization]
      responses:
        '200':
          description: "Response of the get one contact"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "../components/schemas/contact.yaml#/components/schemas/contact"
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                data:
                  $ref: "../components/examples/contact.yaml#/components/examples/contact"
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/goodResponseFindOneContact"
        '401':
          description: 'Error: Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/ErrorUnauthorized401"
        '404':
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/ErrorNotFound404"
        '409':
          description: 'Wrong ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/ErrorConflictContact409"
        '500':
          description: "Server Error"

      # [PUT] UPDATE CONTACT

    put:
      tags:
        - Contact
      summary: Update contact
      parameters:
        - name: id
          in: path
          description: contact Id
          required: true
          example: id_contact
          schema:
            type: string
      requestBody:
        description: contact Data
        required: true
        content:
          application/json:
            schema:
              $ref: '../components/schemas/contact.yaml#/components/schemas/contact'
            examples:
              createContact:
                $ref: '../components/examples/contact.yaml#/components/examples/createContact'
      security:
        - bearerAuth: [Authorization]
      responses:
        '200':
          description: "Response of the update contact"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "../components/schemas/contact.yaml#/components/schemas/contact"
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                data:
                  $ref: "../components/examples/contact.yaml#/components/examples/contact"
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/goodResponseCreated"
        '401':
          description: 'Error: Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/ErrorUnauthorized401"
        '404':
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/ErrorNotFound404"
        '409':
          description: 'Wrong ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/ErrorConflictContact409"
        '500':
          description: "Server Error"

    delete:
      tags:
        - Contact
      summary: Delete contact

      parameters:
        - name: id
          in: path
          description: contact Id
          required: true
          schema:
            type: string

      security:
        - bearerAuth: [Authorization]

      responses:
        '200':
          description: "Response of the delete contact"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "../components/schemas/contact.yaml#/components/schemas/contact"
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                data:
                  $ref: "../components/examples/contact.yaml#/components/examples/contact"
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/goodResponseDeleted"
        '401':
          description: 'Error: Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/ErrorUnauthorized401"
        '404':
          description: 'Error: Not Found'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/ErrorNotFound404"
        '409':
          description: 'Wrong ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/ErrorConflictContact409"
        '500':
          description: "Server Error"

  /contactSearch:
    # [GET] SEARCH FOR CONTACT
    get:
      tags:
        - Contact
      summary: search for contact ✔️
      description: search for contact

      parameters:
        - name: q
          in: query
          description: search query
          required: true
          schema:
            type: string
#        - name: page
#          in: query
#          description: Pagination page
#          example: 1
#          schema:
#            type: string
#        - name: limit
#          in: query
#          description: number of elements per page
#          example: 10
#          schema:
#            type: string

      security:
        - bearerAuth: [Authorization]

      responses:
        '200':
          description: "Response of the search contacts"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "../components/schemas/contact.yaml#/components/schemas/contact"
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                data:
                  - $ref: "../components/examples/contact.yaml#/components/examples/contact"
                  - $ref: "../components/examples/contact.yaml#/components/examples/contact"
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/goodResponseSearchContact"
        '400':
          description: 'Error: Bad Request'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/BadJSONe400"
        '401':
          description: 'Error: Unauthorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    $ref: "../components/schemas/message.yaml#/components/schemas/message"
              example:
                message:
                  $ref: "../components/examples/message.yaml#/components/examples/ErrorUnauthorized401"
        '500':
          description: "Server Error"


