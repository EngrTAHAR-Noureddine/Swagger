openapi: 3.0.3
info:
  title: OPEN API
  description: this is paths
  version: 1.1.0
paths:
  /api/v1/contact:
    # [GET] GET CONTACTS
    get:
      tags:
        - Contact
      summary: Fetch contacts
      description: Fetch contacts
      parameters:
        - name: page
          in: query
          description: Pagination page
          example : 1
          schema:
            type: integer
        - name: limit
          in: query
          description: number of elements per page
          example: 20
          schema:
            type: integer
      security:
        - bearerAuth: [Authorization]
      responses:
        '200':
          description: "OK"
        '500':
          description: "Server Error"
      # [POST] CREATE CONTACT
    post:
      tags:
        - Contact
      summary: Create new contact
      requestBody:
        description: contact Data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contact'
            examples:
              createContact:
                $ref: '#/components/examples/createContact'
      security:
        - bearerAuth: [Authorization]
      responses:
        '201':
          description: 'Created'
        '400':
          description: 'Bad Request'
        '409':
          description: 'Conflict'
        '500':
          description: 'Server Error'

  /api/v1/contact/{id}:
    # [GET] GET ONE CONTACT
    get:
      tags:
        - Contact
      summary: Fetch one contact ✔️
      description: Fetch contact
      parameters:
        - name: id
          in: path
          description: contacts Id
          required: true
          example: id_Contact
          schema:
            type: string
      security:
        - bearerAuth: [Authorization]
      responses:
        200:
          description: "OK"
        500:
          description: "Server Error"
        400:
          description: "Bad Request"
        409:
          description: "Conflict"

      # [PUT] UPDATE CONTACT

    put:
      tags:
        - Contact
      summary: Update contact
      parameters:
        - name: id
          in: path
          description: contact Id
          required: true
          example: id_contact
          schema:
            type: string
      requestBody:
        description: contact Data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/contact'
            examples:
              createContact:
                $ref: '#/components/examples/createContact'
      security:
        - bearerAuth: [Authorization]
      responses:
        '200':
          description: 'OK'
        '400':
          description: 'Bad Request'
        '409':
          description: 'Conflict'
        '500':
          description: 'Server Error'

    delete:
      tags:
        - Contact
      summary: Delete contact

      parameters:
        - name: id
          in: path
          description: contact Id
          required: true
          schema:
            type: string

      security:
        - bearerAuth: [Authorization]

      responses:
        '200':
          description: 'OK'
        '409':
          description: 'Conflict'
        '500':
          description: 'Server Error'

  /api/v1/contact/search:
    # [GET] SEARCH FOR CONTACT
    get:
      tags:
        - Contact
      summary: search for contact ✔️
      description: search for contact

      parameters:
        - name: q
          in: query
          description: search query
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Pagination page
          example: 1
          schema:
            type: string
        - name: limit
          in: query
          description: number of elements per page
          example: 20
          schema:
            type: string

      security:
        - bearerAuth: [Authorization]

      responses:
        '200':
          description: "OK"
        '500':
          description: "Server Error"

components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT  # optional, arbitrary value for documentation purpos

  schemas:
    contact:
      title: Contact Object
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        phone:
          type: string
        mobile:
          type: string
          format: nullable
        email:
          type: string
        photo:
          type: string
        note:
          type: string
        address:
          type: string
        lat:
          type: string
        lon:
          type: string
        favorite:
          type: boolean
          default: false

  examples:
    createContact:
      value:
        name: Moen and Sons
        phone: 431.607.1802
        email : Wayne56@gmail.com
        photo : https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1139.jpg
        note: Quod occaecati quis officia soluta debitis.
        address : 6959 Maggio Plain Walnut Creek
        lat: "-80.1127"
        lon: "-125.1860"
        favorite: false
      summary: A sample object of Contact